@startuml
start

:User interacts with YouTube video;

if (Play Video?) then (yes)
    :Create PlayCommand;
    :User executes PlayCommand;
    :VideoPlayer plays video;
    :Playback affects only the current user;
endif

if (Pause Video?) then (yes)
    :Create PauseCommand;
    :User executes PauseCommand;
    :VideoPlayer pauses video;
    :Playback affects only the current user;
endif

if (Adjust Volume?) then (yes)
    :User specifies new volume level;
    :Create VolumeCommand;
    :User executes VolumeCommand;
    :VideoPlayer sets new volume level;
    :Playback affects only the current user;
endif

if (Fast Forward or Rewind?) then (yes)
    :User specifies seconds to scrub;
    if (Fast Forward) then (yes)
        :Create FastForwardCommand;
        :User executes FastForwardCommand;
        :VideoPlayer fast-forwards video;
    else (Rewind)
        :Create RewindCommand;
        :User executes RewindCommand;
        :VideoPlayer rewinds video;
    endif
    :Playback affects only the current user;
endif

if (Add Comment?) then (yes)
    :User writes comment;
    :Video adds comment to comment list;
    :Notify all viewers of new comment [Observer Pattern];
endif

if (Reply to Comment?) then (yes)
    :User writes reply;
    :Create ReplyCommand;
    :User executes ReplyCommand;
    :Comment adds reply;
    :Notify all viewers of new reply [Observer Pattern];
endif

if (Upload Video?) then (yes)
    :User uploads video file;
    :Metadata processed by VideoManager [Factory Method for creating metadata objects];
    :Notify all subscribers of new video [Observer Pattern];
endif

if (Subscribe to Channel?) then (yes)
    :User clicks Subscribe button;
    :Channel's subscriber count is updated;
    :Notify channel owner of new subscriber [Observer Pattern];
    :Display updated subscriber count globally;
endif

stop
@enduml
